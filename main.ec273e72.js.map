{"version":3,"sources":["scripts/main.js"],"names":["listPhonesURL","listDetailsURL","body","document","querySelector","threeElementsBlock","getListOfPhonesId","url","fetch","then","response","json","data","listIdOfPhones","map","phone","id","catch","Error","getFirstReceivedDetails","promisesList","Promise","race","firstRecievedElement","createElement","className","innerHTML","name","toUpperCase","append","all","phones","allSuccessElements","phoneItem","getThreeFastestDetails","splice","threeRecievedElement","element","textContent","images"],"mappings":";AAAA,aAGA,IAAMA,EAAgB,wEAChBC,EAAiB,oEAEjBC,EAAOC,SAASC,cAAc,mBAC9BC,EAAqBF,SAASC,cAAc,mBAE5CE,EAAoB,SAASC,GAC1BC,OAAAA,MAAMD,GACVE,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GAGGC,OAFgBD,EAAKE,IAAI,SAAAC,GAASA,OAAAA,EAAMC,OAIhDC,MAAM,WAAM,OAAA,IAAIC,MAAM,gCAGrBC,EAA0B,SAASZ,GAC1BD,EAAkBN,GAE1BS,KAAK,SAAAC,GACFU,IAAAA,EAAeV,EAASI,IAAI,SAAAE,GACzBR,OAAAA,MAAMD,EAAMS,EAAK,SACrBP,KAAK,SAAAG,GAAQA,OAAAA,EAAKD,SAClBM,MAAM,WAAM,OAAA,IAAIC,MAAM,yCAG3BG,QAAQC,KAAKF,GACVX,KAAK,SAACM,GACCQ,IAAAA,EAAuBpB,SAASqB,cAAc,OAEpDD,EAAqBE,UAAY,iBAEjCF,EAAqBG,UAEdX,qDAAAA,OAAAA,EAAMY,KACMZ,mCAAAA,OAAAA,EAAMC,GAAGY,cAH5B,kBAKA1B,EAAK2B,OAAON,KAGhBF,QAAQS,IAAIV,GACTX,KAAK,SAACsB,GACCC,IAAAA,EAAqB7B,SAASqB,cAAc,MAElDQ,EAAmBP,UAAY,iBAC/BO,EAAmBN,UAAnB,0BAEAK,EAAOjB,IAAI,SAAAC,GACHkB,IAAAA,EAAY9B,SAASqB,cAAc,MAEzCS,EAAUP,UACLX,kBAAAA,OAAAA,EAAMY,KACKZ,kCAAAA,OAAAA,EAAMC,GAAGY,cAFzB,oBAIAI,EAAmBH,OAAOI,KAE5B/B,EAAK2B,OAAOG,QAKdE,EAAyB,SAAS3B,GACzBD,EAAkBN,GAE1BS,KAAK,SAAAC,GACFU,IAAAA,EAAeV,EAASI,IAAI,SAAAE,GACzBR,OAAAA,MAAMD,EAAMS,EAAK,SACrBP,KAAK,SAAAG,GAAQA,OAAAA,EAAKD,SAClBM,MAAM,WAAM,OAAA,IAAIC,MAAM,yCAG3BG,QAAQS,IAAIV,EAAae,OAAO,EAAG,IAChC1B,KAAK,SAACsB,GACCK,IAAAA,EAAuBjC,SAASqB,cAAc,OAEpDY,EAAqBX,UAAY,iBACjCW,EAAqBV,UAArB,gCAEAK,EAAOjB,IAAI,SAAAC,GACHsB,IAAAA,EAAUlC,SAASqB,cAAc,KAEvCa,EAAQC,YAAcvB,EAAMY,KAC5BS,EAAqBP,OAAOQ,KAE9BhC,EAAmBwB,OAAOO,GAEpBJ,IAAAA,EAAqB7B,SAASqB,cAAc,MAElDQ,EAAmBN,UAAnB,0BACAM,EAAmBP,UAAY,iBAE/BM,EAAOjB,IAAI,SAAAC,GACHkB,IAAAA,EAAY9B,SAASqB,cAAc,MAEzCS,EAAUP,UACLX,kBAAAA,OAAAA,EAAMY,KACuDZ,oFAAAA,OAAAA,EAAMwB,OAAO,GAC1ExB,2BAAAA,OAAAA,EAAMC,GAAGY,cAHd,oBAMAI,EAAmBH,OAAOI,KAE5B5B,EAAmBwB,OAAOG,QAKlCb,EAAwBlB,GACxBiC,EAAuBjC","file":"main.ec273e72.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n/* eslint-disable */\nconst listPhonesURL = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\nconst listDetailsURL = 'https://mate-academy.github.io/phone-catalogue-static/api/phones/';\n/* eslint-enable */\nconst body = document.querySelector('.first-elements');\nconst threeElementsBlock = document.querySelector('.three-elements');\n\nconst getListOfPhonesId = function(url) {\n  return fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      const listIdOfPhones = data.map(phone => phone.id);\n\n      return listIdOfPhones;\n    })\n    .catch(() => new Error('Some problems with server'));\n};\n\nconst getFirstReceivedDetails = function(url) {\n  const list = getListOfPhonesId(listPhonesURL);\n\n  list.then(response => {\n    const promisesList = response.map(id => {\n      return fetch(url + id + '.json')\n        .then(data => data.json())\n        .catch(() => new Error('Wow, something bad with your code'));\n    });\n\n    Promise.race(promisesList)\n      .then((phone) => {\n        const firstRecievedElement = document.createElement('div');\n\n        firstRecievedElement.className = 'first-received';\n\n        firstRecievedElement.innerHTML = `\n          <h1>First Received</h1>\n          <p>${phone.name}</p>\n          <p><b>ID - </b>${phone.id.toUpperCase()}</p>\n        `;\n        body.append(firstRecievedElement);\n      });\n\n    Promise.all(promisesList)\n      .then((phones) => {\n        const allSuccessElements = document.createElement('ul');\n\n        allSuccessElements.className = 'all-successful';\n        allSuccessElements.innerHTML = `<h1>All Successful</h1>`;\n\n        phones.map(phone => {\n          const phoneItem = document.createElement('li');\n\n          phoneItem.innerHTML = `\n          <p>${phone.name}</p>\n          <p><b>ID - </>${phone.id.toUpperCase()}</p>\n          `;\n          allSuccessElements.append(phoneItem);\n        });\n        body.append(allSuccessElements);\n      });\n  });\n};\n\nconst getThreeFastestDetails = function(url) {\n  const list = getListOfPhonesId(listPhonesURL);\n\n  list.then(response => {\n    const promisesList = response.map(id => {\n      return fetch(url + id + '.json')\n        .then(data => data.json())\n        .catch(() => new Error('Wow, something bad with your code'));\n    });\n\n    Promise.all(promisesList.splice(0, 3))\n      .then((phones) => {\n        const threeRecievedElement = document.createElement('div');\n\n        threeRecievedElement.className = 'first-received';\n        threeRecievedElement.innerHTML = `<h1>First three elements</h1>`;\n\n        phones.map(phone => {\n          const element = document.createElement('p');\n\n          element.textContent = phone.name;\n          threeRecievedElement.append(element);\n        });\n        threeElementsBlock.append(threeRecievedElement);\n\n        const allSuccessElements = document.createElement('ul');\n\n        allSuccessElements.innerHTML = `<h1>All Successful</h1>`;\n        allSuccessElements.className = 'all-successful';\n\n        phones.map(phone => {\n          const phoneItem = document.createElement('li');\n          /* eslint-disable */\n          phoneItem.innerHTML = `\n          <p>${phone.name}</p>\n          <img src=\"https://mate-academy.github.io/phone-catalogue-static/${phone.images[0]}\"></img>\n          <p>${phone.id.toUpperCase()}</p>\n          `;\n          /* eslint-enable */\n          allSuccessElements.append(phoneItem);\n        });\n        threeElementsBlock.append(allSuccessElements);\n      });\n  });\n};\n\ngetFirstReceivedDetails(listDetailsURL);\ngetThreeFastestDetails(listDetailsURL);\n"]}